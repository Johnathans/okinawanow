rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /listings/{listing} {
      allow read: if true;
      allow write: if request.auth != null && (
        request.auth.token.admin == true || 
        !resource.data.agencyId || // Allow deleting listings without agencyId (mock data)
        request.auth.uid == resource.data.agencyId ||
        request.auth.uid == 'aX8Jeevdm1TxMMrBnChlG34s0R42' // Allow test agency to delete any listing
      );
    }
    
    match /userProfiles/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /userFavorites/{userId}/listings/{listingId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /tourRequests/{tourId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }

    // Rules for agencies and properties
    match /agencies/{agencyId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == agencyId;
    }

    match /properties/{propertyId} {
      allow read: if true;
      allow write: if request.auth != null && (
        request.auth.uid == resource.data.agencyId ||
        request.auth.uid == request.resource.data.agencyId ||
        request.auth.uid == 'aX8Jeevdm1TxMMrBnChlG34s0R42' // Allow test agency to delete any property
      );
    }

    match /{document=**} {
      allow read: if true;
      allow write: if false;
    }
  }
}